name: Django Tests Automation with GitHub Action on AWS

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #     - master

  # pull_request:
  #   types: [opened, synchronize, reopened]
  #   branches:
  #     - main
  #     - master

jobs:
  test:
    name: Lint and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner to scan for Critical Vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          exit-code: '1'
          severity: 'CRITICAL'
          skip-dirs: core

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: rest-api
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY
      #     docker tag $ECR_REGISTRY/$ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Logout of amazon ECR
      #   if: always()
      #   run: docker logout ${{ steps.login-ecr.outputs.registry }}

  